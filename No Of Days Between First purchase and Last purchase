with first as (
  select
  parse_date('%Y%m%d', event_date) as order_date,
  timestamp_micros(event_timestamp) as time_stamp,
  user_pseudo_id as customer_id,
  ecommerce.transaction_id as order_id,
  ROUND(ecommerce.purchase_revenue, 2) as revenue
from `enter.tablename_123456.events_*`
where event_name = 'purchase'
)

SELECT
  customer_id,
  count(distinct order_id) as no_of_transactions,
  sum(revenue) as total_revenue,
  round(avg(revenue), 2) as aov,
  min(order_date) as first_purchase_date,
  max(order_date) as last_purchase_date,
  date_diff(max(order_date), min(order_date), DAY) as days_between_first_last_purchase
from first
group by customer_id
order by 2 desc
